{
   "servicePath": "/hub/collector",
   "serviceDefinition": {
       "Description": "Adds a \"zenpython\" data source type for PythonCollector",
       "Actions": {
           "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
           "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
       },
       "Command": "su - zenoss -c \"/opt/zenoss/bin/zenpython run -c --duallog --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
       "ConfigFiles": {
           "/opt/zenoss/etc/global.conf": {
               "Filename": "/opt/zenoss/etc/global.conf",
               "Owner": "zenoss:zenoss",
               "Permissions": "660",
               "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}"
           },
           "/opt/zenoss/etc/zenpython.conf": {
               "FileName": "/opt/zenoss/etc/zenpython.conf",
               "Owner": "zenoss:zenoss",
               "Permissions": "0664"
           }
       },
       "Endpoints": [
           {
               "Name": "zenhub",
               "Application": "{{(parent (parent .)).Name}}_zenhubPB",
               "PortNumber": 8789,
               "Protocol": "tcp",
               "Purpose": "import"
           },
           {
               "Application": "redis",
               "Name": "redis",
               "PortNumber": 16379,
               "Protocol": "tcp",
               "Purpose": "import"
           },
           {
               "Name": "CollectorRedis",
               "Application": "{{(parent .).Name}}_redis",
               "PortNumber": 6379,
               "Protocol": "tcp",
               "Purpose": "import"
           },
           {
               "Name": "zproxy",
               "Application": "zproxy",
               "PortNumber": 8080,
               "Protocol": "tcp",
               "Purpose": "import"
           },
           {
               "Name": "controlplane_consumer",
               "Application": "controlplane_consumer",
               "PortNumber": 8444,
               "Protocol": "tcp",
               "Purpose": "import"
           },
           {
               "Name": "rabbitmq",
               "Application": "rabbitmq",
               "PortNumber": 5672,
               "Protocol": "tcp",
               "Purpose": "import"
           }
       ],
       "ImageID": "",
       "Instances": {
           "min": 1
       },
       "ChangeOptions": [
           "restartAllOnInstanceChanged"
       ],
       "RAMCommitment": "1G",
       "CPUCommitment": 1,
       "Launch": "auto",
       "LogConfigs": [
           {
               "LogTags": [
                   {
                       "Name": "monitor",
                       "Value": "{{(parent .).Name}}"
                   }
               ],
               "filters": [
                   "pythondaemon"
               ],
               "path": "/opt/zenoss/log/zenpython.log",
               "type": "zenpython"
           },
           {
               "filters": [
                   "supervisord"
               ],
               "path": "/opt/zenoss/log/audit.log",
               "type": "zenossaudit"
           }
       ],
       "Name": "zenpython",
       "Services": [],
       "Tags": [
           "ZenPacks.zenoss.PythonCollector",
           "daemon",
           "collector"
       ],
       "MonitoringProfile": {
           "MetricConfigs": [
               {
                   "ID": "zenpython",
                   "Name": "zenpython internal metrics",
                   "Description": "zenpython internal metrics",
                   "Metrics": [
                       {
                           "ID": "devices",
                           "Name": "Devices",
                           "Description": "Number of devices being collected.",
                           "Counter": false,
                           "Unit": "Count"
                       },
                       {
                           "ID": "dataPoints",
                           "Name": "Datapoints",
                           "Description": "Number of datapoints collected per second.",
                           "Counter": true,
                           "Unit": "Datapoints/sec"
                       },
                       {
                           "ID": "eventCount",
                           "Name": "Event Count",
                           "Description": "Number of events sent per second.",
                           "Counter": true,
                           "Unit": "Events/sec"
                       },
                       {
                           "ID": "discardedEvents",
                           "Name": "Discarded Events",
                           "Description": "Number of events discarded per second.",
                           "Counter": true,
                           "Unit": "Events/sec"
                       },
                       {
                           "ID": "eventQueueLength",
                           "Name": "Event Queue Length",
                           "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                           "Counter": false,
                           "Unit": "Events"
                       },
                       {
                           "ID": "taskCount",
                           "Name": "Task Count",
                           "Description": "Total number of configured tasks.",
                           "Counter": false,
                           "Unit": "Tasks"
                       },
                       {
                           "ID": "runningTasks",
                           "Name": "Running Tasks",
                           "Description": "Number of tasks in the running state.",
                           "Counter": false,
                           "Unit": "Tasks"
                       },
                       {
                           "ID": "queuedTasks",
                           "Name": "Queued Tasks",
                           "Description": "Number of tasks queued waiting to be run.",
                           "Counter": false,
                           "Unit": "Tasks"
                       },
                       {
                           "ID": "missedRuns",
                           "Name": "Missed Runs",
                           "Description": "Number of tasks that missed their scheduled run time.",
                           "Counter": true,
                           "Unit": "Runs"
                       },
                       {
                           "ID": "percentBlocked",
                           "Name": "Percent Blocked",
                           "Description": "Percent of the time blocked by plugin code execution.",
                           "Counter": true,
                           "Unit": "percent"
                       }
                   ]
               }
           ],
           "GraphConfigs": [
               {
                   "id": "devices",
                   "name": "Devices",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "Devices",
                   "description": "Number of devices being collected.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "devices",
                           "legend": "Devices",
                           "metric": "devices",
                           "metricSource": "zenpython",
                           "name": "Devices",
                           "rate": false,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "dataPoints",
                   "name": "Datapoint Rate",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "Datapoints/sec",
                   "description": "Number of datapoints collected per second.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "dataPoints",
                           "legend": "Datapoints",
                           "metric": "dataPoints",
                           "metricSource": "zenpython",
                           "name": "Datapoints",
                           "rate": true,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "eventCount",
                   "name": "Event Rate",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "Events/sec",
                   "description": "Number of events sent per second.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "eventCount",
                           "legend": "Events",
                           "metric": "eventCount",
                           "metricSource": "zenpython",
                           "name": "Events",
                           "rate": true,
                           "type": "line"
                       },
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "discardedEvents",
                           "legend": "Discarded",
                           "metric": "discardedEvents",
                           "metricSource": "zenpython",
                           "name": "Discarded",
                           "rate": true,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "eventQueueLength",
                   "name": "Event Queue Length",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "Event Queue Length",
                   "description": "Number of events queued to be set to zenhub.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "eventQueueLength",
                           "legend": "Event Queue Length",
                           "metric": "eventQueueLength",
                           "metricSource": "zenpython",
                           "name": "Event Queue Length",
                           "rate": false,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "tasks",
                   "name": "Tasks",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "",
                   "description": "Number of queued, running, and total tasks.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "queuedTasks",
                           "legend": "Queued Tasks",
                           "metric": "queuedTasks",
                           "metricSource": "zenpython",
                           "name": "Queued Tasks",
                           "rate": false,
                           "type": "line"
                       },
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "runningTasks",
                           "legend": "Running Tasks",
                           "metric": "runningTasks",
                           "metricSource": "zenpython",
                           "name": "Running Tasks",
                           "rate": false,
                           "type": "line"
                       },
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "taskCount",
                           "legend": "Task Count",
                           "metric": "taskCount",
                           "metricSource": "zenpython",
                           "name": "Task Count",
                           "rate": false,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "missedRuns",
                   "name": "Missed Runs",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "Missed Runs",
                   "description": "Number of tasks that missed their scheduled run time.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "missedRuns",
                           "legend": "Missed Runs",
                           "metric": "missedRuns",
                           "metricSource": "zenpython",
                           "name": "Missed Runs",
                           "rate": true,
                           "type": "line"
                       }
                   ]
               },
               {
                   "id": "percentBlocked",
                   "name": "Percent Blocked",
                   "footer": false,
                   "returnset": "EXACT",
                   "type": "line",
                   "yAxisLabel": "percent",
                   "description": "Percent of the time blocked by plugin code execution.",
                   "range": {
                       "start": "1h-ago",
                       "end": "0s-ago"
                   },
                   "datapoints": [
                       {
                           "aggregator": "avg",
                           "fill": false,
                           "format": "%%d",
                           "id": "percentBlocked",
                           "legend": "Blocked",
                           "metric": "percentBlocked",
                           "metricSource": "zenpython",
                           "name": "Blocked",
                           "rate": true,
                           "type": "line"
                       }
                   ]
               }
           ]
       },
       "HealthChecks": {
           "zenhub_answering": {
               "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
               "Interval": 10.0
           },
           "redis_answering": {
               "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
               "Interval": 5.0
           },
           "zproxy_answering": {
               "Script": "/opt/zenoss/bin/healthchecks/zproxy_answering",
               "Interval": 10.0
           },
           "running": {
               "Script": "pgrep -fu zenoss zenpython.py > /dev/null",
               "Interval": 5.0
           }
       },
       "Volumes": [
           {
               "Owner": "zenoss:zenoss",
               "ContainerPath": "/home/zenoss/.ssh",
               "Type": "",
               "ResourcePath": ".ssh",
               "Permission": "0755"
           },
           {
               "Owner": "zenoss:zenoss",
               "ResourcePath": "var-zenpacks",
               "ContainerPath": "/var/zenoss",
               "Permission": "0775"
           }
       ]
   }

}
